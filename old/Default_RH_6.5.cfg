# Kickstart file automatically generated by anaconda.
# modified for our base install

install
network --bootproto=dhcp --nodns --noipv6
nfs --server=172.16.210.1 --dir=/kickstart/os/RH/EL_6.5_x86_64/
lang en_GB.UTF-8
keyboard uk
skipx
text

rootpw --iscrypted $1$eeBKH.q7$ussjLYlxi55gBdMtmjldu1
# add standard account (me)

firewall --disabled
selinux --disabled
authconfig --enableshadow --enablemd5 
timezone --utc Europe/London

zerombr yes
bootloader --location=mbr

# get disk layout - generated by %pre
%include /tmp/part-include
# standard package list 

%include http://172.16.210.1/kickstart/CFG/users/Default_users.cfg
%include http://172.16.210.1/kickstart/CFG/Default_packages_6.x.cfg

%pre

mkdir /kickstart
mount -o ro,nolock -t nfs 172.16.210.1:/kickstart  /kickstart

# pre section
#----- partitioning logic below--------------
# pick the first drive that is not removable and is over MINSIZE
DIR="/sys/block"

# minimum size of hard drive needed specified in GIGABYTES
MINSIZE=4

ROOTDRIVE=""

# /sys/block/*/size is in 512 byte chunks

for DEV in sda hda ; do
  if [ -d $DIR/$DEV ]; then
    REMOVABLE=`cat $DIR/$DEV/removable`
    if (( $REMOVABLE == 0 )); then
      echo $DEV
      SIZE=`cat $DIR/$DEV/size`
      GB=$(($SIZE/2**21))
      if [ $GB -gt $MINSIZE ]; then
        echo "$(($SIZE/2**21))"
        if [ -z $ROOTDRIVE ]; then
          ROOTDRIVE=$DEV
        fi
      fi
    fi
  fi
done

echo "ROOTDRIVE=$ROOTDRIVE"

dd if=/dev/zero of=/dev/$ROOTDRIVE bs=1M count=10

if [ $GB -lt 17 ]; then
# drives smaller than 16GB
 wget -O /tmp/part-include http://172.16.210.1/kickstart/CFG/disk_layouts/bigger_16GB.cfg
else
# drives bigger than 16GB
 wget -O /tmp/part-include http://172.16.210.1/kickstart/CFG/disk_layouts/smaller_16GB.cfg
fi

sed -e "s/xxxxdevdev/$ROOTDRIVE/g" -i /tmp/part-include


#### 
%post --log=/mnt/sysimage/root/ks-post-nc.log --nochroot

for p in b c d e f g h i j k l m n o p q r s t u v w x y z
do

if [ -e /dev/sd${p} ] ; then

dd if=/dev/zero of=/dev/sd${p} bs=1M count=10
/usr/sbin/pvcreate /dev/sd${p}

if [ "$p" == "c" ] ; then
 /usr/sbin/vgcreate data /dev/sd${p}
elif [ "$p" == "b" ]  ; then
 /usr/sbin/vgcreate swap /dev/sd${p}
else [ -e /dev/sd${p} ]  
 /usr/sbin/vgcreate data_${p} /dev/sd${p}
fi

fi

done




mkdir -p /mnt/sysimage/mnt/nfs
mount -o ro,nolock -t nfs 172.16.210.1:/kickstart  /mnt/sysimage/mnt/nfs

%post --log=/root/ks-post-cr.log 
/mnt/nfs/scripts/finish/default_finish_CentOS 2>&1 | tee /root/ks-script.log



#sleep 300

